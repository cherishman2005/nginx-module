
#user  nobody;
worker_processes  1;

error_log  logs/error.log debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

#daemon off;

events {
    worker_connections  1024;
}

#stream {
##    upstream udp_backend {
##        server 127.0.0.1:53;
##    }
##
##    server {
##        listen 127.0.0.1:53 udp;
##        proxy_responses 1;
##        proxy_timeout 20s;
##        proxy_pass udp_backend;
##    }
#    
#    # http/2 + quic/43
#    upstream quic_caddy {
#        server 127.0.0.1:444;
#    }
#
#    #server {
#    #    listen 443 udp;
#    #    listen [::]:443 udp;
#    #    proxy_pass quic_caddy;
#    #}
#}


stream {
#    upstream test {
#        upsync 127.0.0.1:8500/v1/kv/upstreams/tcp_test/ upsync_timeout=6m upsync_interval=500ms upsync_type=consul strong_dependency=off;
#        upsync_dump_path /usr/local/openresty/nginx/conf/servers/servers_tcp_test.conf;
#
#        include /usr/local/openresty/nginx/conf/servers/servers_tcp_test.conf;
#    }

    upstream bar {
        server 127.0.0.1:8090 weight=1 fail_timeout=10 max_fails=3;
    }

#    server {
#        listen 12345;
#
#        proxy_connect_timeout 1s;
#        proxy_timeout 3s;
#        proxy_pass test;
#    }

    server {
        listen 2345;
    
        upstream_show;
    }

    server {
        listen 127.0.0.1:9091;

        proxy_responses 1;
        proxy_timeout 20s;
        proxy_pass bar;
    }
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    lua_package_path '/usr/local/openresty/nginx/lua/?.lua;/usr/local/openresty/nginx/lua/common/?.lua;/usr/local/openresty/nginx/lua/resty/?.lua;;';

    server_tokens off; 

    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    #gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";
    
    upstream backend {
        server 192.168.68.133:8080 weight=20; 
        server 192.168.68.133:8081 weight=10; 
    }

    upstream memcacheds {
        server 127.0.0.1:11211;
    }
    
    upstream uniap_yy_com_proxy
    {
        # ip_hash;
        keepalive 32;
        # localhost
        server 127.0.0.1:8000 max_fails=2 fail_timeout=10s;
    }

    server {
        listen 443 ssl;
        server_name room.yy.com;

        ssl on;
        ssl_certificate         ./cert/webZoneSha2Crt.crt;
        ssl_certificate_key     ./cert/webZoneSha2Crt.key;
        
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers *;

        location /open/mobile/mp {
            proxy_buffering on;
            proxy_buffer_size 16M;
            proxy_buffers 4 16M;
            proxy_busy_buffers_size 16M;

            proxy_pass http://192.168.68.133:9020;
        }
        
        location /rtm {
            try_files $uri $uri/ /rtm/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/rtm_client/dist;
        }
        
        location = /echo {
            # switch off logging
            access_log on;

            proxy_next_upstream http_502 http_504 error timeout invalid_header;

            # redirect all HTTP traffic to uniap_yy_com_proxy
            proxy_http_version 1.1;
            #proxy_pass http://uniap_yy_com_proxy;
            proxy_pass http://192.168.68.133:9999;
            proxy_set_header REMOTE_ADDR $remote_addr;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # WebSocket support (nginx 1.4)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
        
        location /demo {
            default_type text/html;

            add_header alt-svc 'quic=":443"; ma=2592000; v="44,43,39"';

            content_by_lua_block {
              local cjson = require("cjson");
              local obj = {uid = "2307081572", name = "zhangbiwu", age = 18};
              ngx.print(cjson.encode(obj));
            }
        }
        
        location /test {
            default_type text/html;

            #add_header alt-svc 'quic=":443"; ma=2592000; v="44,43,39"';
            add_header alt-svc 'quic=":443", h2=":443"; ma=2592000; persist=1; v="44,43,39"';

            alias /usr/local/caddy/www/test;
        }
        
        location /webrtc-demo {
          default_type text/html;
          alias /usr/local/openresty/nginx/html/webrtc_demo;
        }
    }
    
    server {
        listen       81;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers *;

        location = /upstream_show {
            upstream_show;
        }
    }
    
    
    js_import http.js;
    js_set $foo     http.foo;
    js_set $summary http.summary;
    
    server {
        listen       80;
        server_name  www.test.com room.yy.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers *;

        location = /foo {
            add_header X-Foo $foo;
            js_content http.baz;
        }

        location = /summary {
            return 200 $summary;
        }

        location = /hello {
            js_content http.hello;
        }
        
        location = /upstream_show {
            upstream_show;
        }
        
        location /test {
            default_type text/html;
            content_by_lua_file conf/content_handler.lua;
        }
        
        location /v1 {
            proxy_pass http://127.0.0.1:8500;
        }

        location /ui {
            proxy_pass http://127.0.0.1:8500;
        }
        
        location = /proxy_test {
            proxy_pass http://test;
        }
        
        location /dd {
          default_type text/html;
          alias /usr/local/openresty/nginx/html/demo;
        }

        location /h5service_yycom_demo {
            alias /home/zhangbiwu/vue_projects/H5_SDK/h5service_yycom_demo;
            index index.html;
        }

        location /user/token {
            proxy_buffering on;
            proxy_buffer_size 16M;
            proxy_buffers 4 16M;
            proxy_busy_buffers_size 16M;

            proxy_pass http://192.168.68.133:9000;
        }
        
        location /agora-rtm {
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/RTM-master/Agora-RTM-Tutorial-Web/build;
        }
        
        location /rtm {
            try_files $uri $uri/ /rtm/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/rtm_client/dist;
        }
        
        location /chatroom-dev {
            try_files $uri $uri/ /chatroom-dev/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/chatroom_dev/dist;
        }
        
        location /chatroom {
            try_files $uri $uri/ /chatroom/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/chatroom/dist;
        }

        location /room-test {
            try_files $uri $uri/ /room-test/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/room_test/dist;
        }

        location /room-debug {
            try_files $uri $uri/ /room-debug/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/room_debug/dist;
        }

        location /room {
            try_files $uri $uri/ /room/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/room/dist;
        }

        location /rim {
            try_files $uri $uri/ /rim/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/tencentyun/TIMSDK/H5/dist;
        }

        location /demo {
            default_type text/html;

            add_header alt-svc 'quic=":443"; ma=2592000; v="39"';

            content_by_lua_block {
              local cjson = require("cjson");
              local obj = {uid = "2307081572", name = "zhangbiwu", age = 18};
              ngx.print(cjson.encode(obj));
            }
        }

        location /mm {
            set $memcached_key $request_uri;
            add_header X-mem-key  $memcached_key;
            memcached_pass  memcacheds;
            default_type text/html;
            #set_hashed_upstream $memcached_key;
            set $memc_exptime 600;
        }
        
        #location /yycf_reader {
        #    set $yycf_reader_key $request_uri;
        #    add_header X-mem-key  $yycf_reader_key;
        #    yycf_reader_pass memcacheds;
        #    default_type text/html;
        #    set $yycf_reader_exptime 600;
        #}

        location /proxy {
            default_type text/html;
            proxy_pass http://backend;
        }
        
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        location /service {
            try_files $uri $uri/ /service/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/service/dist;
        }

        location /three-demo {
            try_files $uri $uri/ /three-demo/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/three-demo/dist;
        }

        location /three-viewer {
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/panorama-viewer-master;
        }

        location /video {
            default_type text/html;
            alias /home/zhangbiwu/video;
        }
        location /player {
            default_type text/html;
            alias /home/nginx/player/ckplayer;
        }


        location /yy-demo {
            try_files $uri $uri/ /yy-demo/index.html;
            default_type text/html;
            alias /home/zhangbiwu/vue_projects/vue-music-master/dist;
        }


        location /three_cloud/viewer_list/get {
            default_type text/html;
            content_by_lua_file lua/three_map_api/get_viewer_list.lua;
        }
        location /three_cloud/map_list/get {
            default_type text/html;
            content_by_lua_file lua/three_map_api/get_map_list.lua;
        }
        location /three_cloud/video_list/get {
            default_type text/html;
            content_by_lua_file lua/three_map_api/get_video_list.lua;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       8888;

        location /main {
            jitp;
            jitp_upstream_location /jitp_hls; 
        }

        location /jitp_hls {
            proxy_buffering on;
            proxy_buffer_size 16M;
            proxy_buffers 4 16M;
            proxy_busy_buffers_size 16M;

            proxy_pass http://192.168.68.133:8080;
        }
    }
    
    server {
        listen       8080;

#        location / {
#            default_type text/html;
#            content_by_lua_block {
#                ngx.say("jitp: " .. ngx.var.uri .. " 8080");
#            }
#        }
        
        location /auth {
            default_type text/html;
            content_by_lua_block {
                local cjson = require "cjson"
                -- read data --
                ngx.req.read_body()
                local data = ngx.req.get_body_data()
                if not data then
                    return ngx.exit(403)
                end
                ngx.log(ngx.INFO, 'auth_data="' .. auth_data .. '"')

                local obj = cjson.decode(data);
                if not obj or not obj.username or not obj.token or obj.bos_path then
                    ngx.log(ngx.ERR, "obj params is nil")
                    return ngx.exit(403)
                end
                
                local out = { username = obj.username, token = obj.token, bos_path = obj.bos_path, code = 200, msg = "ok" }
                ngx.print(cjson.encode(out));
            }
        }
    }
    
    server {
        listen       8081;

        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say(ngx.var.uri .. " 8081");
            }
        }

    }
    
    #include upstream.conf;
    #include s2s_upstream.conf;
    #include njs_s2s_upstream.conf;

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
